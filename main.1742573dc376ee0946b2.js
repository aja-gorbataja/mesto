(()=>{"use strict";const e=document.querySelector(".profile__info-edit"),t=document.querySelector(".profile__add"),s=document.querySelector(".form__input-name"),i=document.querySelector(".form__input-description"),n=document.querySelector(".form__input-avatar"),r=document.querySelector(".profile__info-name"),o=document.querySelector(".profile__info-description"),a=document.querySelector(".profile__avatar"),l=document.querySelector(".elements");class h{constructor(e,t,s,i,n,r){this._data=e,this._name=e.name,this._link=e.link,this._cardId=e._id,this._ownerId=e.owner._id,this._userId=r,this._likes=e.likes,this._templateSelector=t,this._handleOpenPopup=s,this._handleDeleteClick=i,this._likeCard=n,this._like=!1,this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".elements__item-img"),this._cardTitle=this._element.querySelector(".elements__item-name"),this._cardLike=this._element.querySelector(".elements__item-like"),this._cardRemove=this._element.querySelector(".elements__item-trash"),this._likesNumber=this._element.querySelector(".elements__item-numbers")}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".elements__item").cloneNode(!0)}generateCard(){return this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._likesNumber.textContent=this._likes.length,this._userId!==this._ownerId&&this._cardRemove.remove(),this._cardId.like?this._cardLike.classList.add("elements__item-like_on"):this._cardLike.classList.remove("elements__item-like_on"),this._element}_setEventListeners(){this._cardImage.addEventListener("click",(()=>{this._handleOpenPopup(this._name,this._link)})),this._cardLike.addEventListener("click",(()=>{this._likeCard(this)})),this._cardRemove.addEventListener("click",(()=>{this._handleDeleteClick(this)}))}get like(){return this._like}toggleLike(){this._like=!this._like}countLikes(e){this._likes=e,this._likesNumber.textContent=this._likes.length}handleLike(){this._cardLike.classList.toggle("elements__item-like_on")}handleTrash(){this._element.remove()}}class u{constructor(e){this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".popup-close")}openPopup(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}closePopup(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.closePopup()};setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.closePopup()})),this._popup.addEventListener("mousedown",(e=>{e.currentTarget===e.target&&this.closePopup()}))}}class d extends u{constructor(e,{formSubmit:t}){super(e),this._formSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._inputList=this._form.querySelectorAll(".popup__input")}setLoadingText(e){this._popup.querySelector(".popup__button").textContent=e}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._formSubmit(this._getInputValues())})),super.setEventListeners()}closePopup(){super.closePopup(),this._form.reset()}}class c{constructor(e,t){this._config=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector)}_hideInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);t.classList.remove(this._config.errorClass),t.textContent="",e.classList.remove(this._config.inputErrorClass)}_showInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);t.classList.add(this._config.errorClass),t.textContent=e.validationMessage,e.classList.add(this._config.inputErrorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputList)?this.disableButton():(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}deleteErrors(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}disableButton(){this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0}enableValidation(){this._setEventListeners()}}let _;const p=new class{constructor(e){this.url=e.url,this.headers=e.headers}_handleResponse(e){return e.ok?e.json():Promise.reject(new Error("Произошла ошибка"))}getCards(){return fetch(`${this.url}/cards`,{method:"GET",headers:this.headers}).then((e=>this._handleResponse(e)))}createCard(e){return fetch(`${this.url}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:e.name,link:e.link})}).then((e=>this._handleResponse(e)))}getOwnerInfo(){return fetch(this.url+"/users/me",{method:"GET",headers:this.headers}).then((e=>this._handleResponse(e)))}editProfile(e){return fetch(`${this.url}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.about})}).then((e=>this._handleResponse(e)))}editAvatar(e){return fetch(`${this.url}/users/me/avatar`,{headers:this.headers,method:"PATCH",body:JSON.stringify({avatar:e.avatar})}).then((e=>this._handleResponse(e)))}deleteCard(e){return fetch(`${this.url}/cards/${e}`,{method:"DELETE",headers:this.headers}).then((e=>this._handleResponse(e)))}addLike(e){return fetch(`${this.url}/cards/${e}/likes`,{method:"PUT",headers:this.headers}).then((e=>this._handleResponse(e)))}deleteLike(e){return fetch(`${this.url}/cards/${e}/likes`,{method:"DELETE",headers:this.headers}).then((e=>this._handleResponse(e)))}}({url:"https://mesto.nomoreparties.co/v1/cohort-60",headers:{authorization:"a7d13795-b751-49db-aed9-35354fa7b32f","Content-Type":"application/json"}});p.getOwnerInfo().then((e=>{m.setUserInfo(e),m.setUserAvatar(e),m.getOwnerId(e._id),_=e._id})).then((()=>{p.getCards().then((e=>{f.renderItem(e)})).catch((e=>{console.log(e)}))})).catch((e=>{console.log(e)}));const m=new class{constructor({name:e,about:t,avatar:s,_id:i}){this._name=e,this._about=t,this._avatar=s,this._id=i}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){this._name.textContent=e.name,this._about.textContent=e.about}setUserAvatar(e){this._avatar.src=e.avatar}getOwnerId(){return this._id}}({name:r,about:o,avatar:a}),f=new class{constructor({renderer:e},t){this._renderer=e,this._container=t}addItem(e){this._container.prepend(e)}renderItem(e){e.forEach((e=>{this._renderer(e)}))}}({renderer:e=>{const t=g(e);f.addItem(t)}},l);function g(e){return new h(e,".item",v,b,E,_).generateCard()}const L=new d(".popup_add",{formSubmit:e=>{L.setLoadingText("Сохранение..."),p.createCard(e).then((e=>{!function(e){const t=g(e);f.addItem(t)}(e)})).catch((e=>{console.log(e)})).finally((()=>{L.setLoadingText("Создать"),L.closePopup()}))}});function v(e,t){y.openPopup(e,t)}function E(e){e.like?p.deleteLike(e._cardId).then((t=>{e.countLikes(t.likes),e.toggleLike(),e.handleLike()})).catch((e=>{console.log(e)})):p.addLike(e._cardId).then((t=>{e.countLikes(t.likes),e.toggleLike(),e.handleLike()})).catch((e=>{console.log(e)}))}L.setEventListeners(),t.addEventListener("click",(()=>{I["form-add"].deleteErrors(),I["form-add"].disableButton(),L.openPopup()}));const k=new class extends u{constructor(e,{formSubmit:t}){super(e),this._formSubmit=t,this._buttonConfirm=this._popup.querySelector(".popup__button")}setLoadingText(e){this._buttonConfirm.textContent=e}setEventListeners(){super.setEventListeners(),this._buttonConfirm.addEventListener("click",(()=>{this._formSubmit(this._card)}))}handleCard(e){this._card=e}}(".popup_ask",{formSubmit:e=>{k.setLoadingText("Удаление..."),p.deleteCard(e._cardId).then((()=>{e.handleTrash()})).catch((e=>{console.log(e)})).finally((()=>{k.setLoadingText("Да"),k.closePopup()}))}});function b(e){k.handleCard(e),k.openPopup()}k.setEventListeners();const S=new d(".popup_edit",{formSubmit:e=>{S.setLoadingText("Сохранение..."),p.editProfile(e).then((e=>{m.setUserInfo(e,{name:s,about:i})})).catch((e=>{console.log(e)})).finally((()=>{S.setLoadingText("Сохранить"),S.closePopup()}))}});e.addEventListener("click",(()=>{S.setInputValues(m.getUserInfo()),I["form-edit"].deleteErrors(),I["form-edit"].disableButton(),S.openPopup()})),S.setEventListeners();const y=new class extends u{constructor(e){super(e),this._imgFull=this._popup.querySelector(".img__full"),this._imgTitle=this._popup.querySelector(".img__title")}openPopup(e,t){this._imgFull.src=t,this._imgFull.alt=e,this._imgTitle.textContent=e,super.openPopup()}}(".popup_img"),C=new d(".popup_avatar",{formSubmit:e=>{C.setLoadingText("Сохранение..."),p.editAvatar(e).then((e=>{m.setUserAvatar(e,{avatar:n})})).catch((e=>{console.log(e)})).finally((()=>{C.setLoadingText("Сохранить"),C.closePopup()}))}});C.setEventListeners(),document.querySelector(".profile__avatar").addEventListener("click",(()=>{C.openPopup()})),y.setEventListeners();const I={};var q;q={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},Array.from(document.querySelectorAll(q.formSelector)).forEach((e=>{const t=new c(q,e),s=e.getAttribute("name");I[s]=t,t.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,