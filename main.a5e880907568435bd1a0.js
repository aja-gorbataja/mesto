(()=>{"use strict";const e=document.querySelector(".profile__info-edit"),t=document.querySelector(".profile__add"),s=document.querySelector(".form__input-name"),i=document.querySelector(".form__input-description"),n=document.querySelector(".form__input-avatar"),r=document.querySelector(".profile__info-name"),o=document.querySelector(".profile__info-description"),a=document.querySelector(".profile__avatar"),l=document.querySelector(".elements");class h{constructor(e,t,s,i,n,r){this._data=e,this._name=e.name,this._link=e.link,this._cardId=e._id,this._ownerId=e.owner._id,this._userId=r,this._likes=e.likes,this._templateSelector=t,this._handleOpenPopup=s,this._handleDeleteClick=i,this._likeCard=n,this._like=!1,this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".elements__item-img"),this._cardTitle=this._element.querySelector(".elements__item-name"),this._cardLike=this._element.querySelector(".elements__item-like"),this._cardRemove=this._element.querySelector(".elements__item-trash"),this._likesNumber=this._element.querySelector(".elements__item-numbers")}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".elements__item").cloneNode(!0)}generateCard(){return this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._likesNumber.textContent=this._likes.length,this._userId!==this._ownerId&&this._cardRemove.remove(),this._cardId.like?this._cardLike.classList.add("elements__item-like_on"):this._cardLike.classList.remove("elements__item-like_on"),this._element}_setEventListeners(){this._cardImage.addEventListener("click",(()=>{this._handleOpenPopup(this._name,this._link)})),this._cardLike.addEventListener("click",(()=>{this._likeCard(this)})),this._cardRemove.addEventListener("click",(()=>{this._handleDeleteClick(this)}))}get like(){return this._like}toggleLike(){this._like=!this._like}countLikes(e){this._likes=e,this._likesNumber.textContent=this._likes.length}handleLike(){this._cardLike.classList.toggle("elements__item-like_on")}handleTrash(){this._element.remove(),this._element=null}}class u{constructor(e){this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".popup-close")}openPopup(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}closePopup(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.closePopup()};setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.closePopup()})),this._popup.addEventListener("mousedown",(e=>{e.currentTarget===e.target&&this.closePopup()}))}}class d extends u{constructor(e,{formSubmit:t}){super(e),this._formSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._inputList=this._form.querySelectorAll(".popup__input")}setLoadingText(e){this._popup.querySelector(".popup__button").textContent=e}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._formSubmit(this._getInputValues())})),super.setEventListeners()}closePopup(){super.closePopup(),this._form.reset()}}class c{constructor(e,t){this._config=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector)}_hideInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);t.classList.remove(this._config.errorClass),t.textContent="",e.classList.remove(this._config.inputErrorClass)}_showInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);t.classList.add(this._config.errorClass),t.textContent=e.validationMessage,e.classList.add(this._config.inputErrorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputList)?this.disableButton():(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}deleteErrors(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}disableButton(){this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0}enableValidation(){this._setEventListeners()}}let _;const p=new class{constructor(e){this.url=e.url,this.headers=e.headers}_handleResponse(e){return e.ok?e.json():Promise.reject(new Error("Произошла ошибка"))}getCards(){return fetch(`${this.url}/cards`,{method:"GET",headers:this.headers}).then((e=>this._handleResponse(e)))}createCard(e){return fetch(`${this.url}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:e.name,link:e.link})}).then((e=>this._handleResponse(e)))}getOwnerInfo(){return fetch(this.url+"/users/me",{method:"GET",headers:this.headers}).then((e=>this._handleResponse(e)))}editProfile(e){return fetch(`${this.url}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.about})}).then((e=>this._handleResponse(e)))}editAvatar(e){return fetch(`${this.url}/users/me/avatar`,{headers:this.headers,method:"PATCH",body:JSON.stringify({avatar:e.avatar})}).then((e=>this._handleResponse(e)))}deleteCard(e){return fetch(`${this.url}/cards/${e}`,{method:"DELETE",headers:this.headers}).then((e=>this._handleResponse(e)))}addLike(e){return fetch(`${this.url}/cards/${e}/likes`,{method:"PUT",headers:this.headers}).then((e=>this._handleResponse(e)))}deleteLike(e){return fetch(`${this.url}/cards/${e}/likes`,{method:"DELETE",headers:this.headers}).then((e=>this._handleResponse(e)))}}({url:"https://mesto.nomoreparties.co/v1/cohort-60",headers:{authorization:"a7d13795-b751-49db-aed9-35354fa7b32f","Content-Type":"application/json"}});p.getOwnerInfo().then((e=>{m.setUserInfo(e),m.setUserAvatar(e),m.getOwnerId(e._id),_=e._id})).then((()=>{p.getCards().then((e=>{f.renderItem(e)})).catch((e=>{console.log(e)}))})).catch((e=>{console.log(e)}));const m=new class{constructor({name:e,about:t,avatar:s,_id:i}){this._name=e,this._about=t,this._avatar=s,this._id=i}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){this._name.textContent=e.name,this._about.textContent=e.about}setUserAvatar(e){this._avatar.src=e.avatar}getOwnerId(){return this._id}}({name:r,about:o,avatar:a}),f=new class{constructor({renderer:e},t){this._renderer=e,this._container=t}addItem(e){this._container.prepend(e)}renderItem(e){e.forEach((e=>{this._renderer(e)}))}}({renderer:e=>{const t=g(e);f.addItem(t)}},l);function g(e){return new h(e,".item",v,b,E,_).generateCard()}const L=new d(".popup_add",{formSubmit:e=>{L.setLoadingText("Сохранение..."),p.createCard(e).then((e=>{!function(e){const t=g(e);f.addItem(t)}(e),L.closePopup()})).catch((e=>{console.log(e)})).finally((()=>{L.setLoadingText("Создать")}))}});function v(e,t){y.openPopup(e,t)}function E(e){e.like?p.deleteLike(e._cardId).then((t=>{e.countLikes(t.likes),e.toggleLike(),e.handleLike()})).catch((e=>{console.log(e)})):p.addLike(e._cardId).then((t=>{e.countLikes(t.likes),e.toggleLike(),e.handleLike()})).catch((e=>{console.log(e)}))}L.setEventListeners(),t.addEventListener("click",(()=>{I["form-add"].deleteErrors(),I["form-add"].disableButton(),L.openPopup()}));const k=new class extends u{constructor(e,{formSubmit:t}){super(e),this._formSubmit=t,this._buttonConfirm=this._popup.querySelector(".popup__button")}setLoadingText(e){this._buttonConfirm.textContent=e}setEventListeners(){super.setEventListeners(),this._buttonConfirm.addEventListener("click",(()=>{this._formSubmit(this._card)}))}handleCard(e){this._card=e}}(".popup_ask",{formSubmit:e=>{k.setLoadingText("Удаление..."),p.deleteCard(e._cardId).then((()=>{e.handleTrash(),k.closePopup()})).catch((e=>{console.log(e)})).finally((()=>{k.setLoadingText("Да")}))}});function b(e){k.handleCard(e),k.openPopup()}k.setEventListeners();const S=new d(".popup_edit",{formSubmit:e=>{S.setLoadingText("Сохранение..."),p.editProfile(e).then((e=>{m.setUserInfo(e,{name:s,about:i}),S.closePopup()})).catch((e=>{console.log(e)})).finally((()=>{S.setLoadingText("Сохранить")}))}});e.addEventListener("click",(()=>{S.setInputValues(m.getUserInfo()),I["form-edit"].deleteErrors(),I["form-edit"].disableButton(),S.openPopup()})),S.setEventListeners();const y=new class extends u{constructor(e){super(e),this._imgFull=this._popup.querySelector(".img__full"),this._imgTitle=this._popup.querySelector(".img__title")}openPopup(e,t){this._imgFull.src=t,this._imgFull.alt=e,this._imgTitle.textContent=e,super.openPopup()}}(".popup_img");y.setEventListeners();const C=new d(".popup_avatar",{formSubmit:e=>{C.setLoadingText("Сохранение..."),p.editAvatar(e).then((e=>{m.setUserAvatar(e,{avatar:n}),C.closePopup()})).catch((e=>{console.log(e)})).finally((()=>{C.setLoadingText("Сохранить")}))}});C.setEventListeners(),document.querySelector(".profile__edit").addEventListener("click",(()=>{C.openPopup()}));const I={};var q;q={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},Array.from(document.querySelectorAll(q.formSelector)).forEach((e=>{const t=new c(q,e),s=e.getAttribute("name");I[s]=t,t.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RixFQUFXL0YsRUFBWWdHLGFBQWEsUUFDMUNiLEVBQWVZLEdBQVlELEVBQzNCQSxFQUFVbkUsa0JBQWtCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9kYXRhLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBidXR0b25FZGl0T3BlbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19pbmZvLWVkaXQnKTtcclxuZXhwb3J0IGNvbnN0IGJ1dHRvbkFkZE9wZW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkJyk7XHJcbmV4cG9ydCBjb25zdCBpbnB1dE5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9faW5wdXQtbmFtZScpO1xyXG5leHBvcnQgY29uc3QgaW5wdXRBYm91dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19pbnB1dC1kZXNjcmlwdGlvbicpO1xyXG5leHBvcnQgY29uc3QgaW5wdXRBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9faW5wdXQtYXZhdGFyJyk7XHJcbmV4cG9ydCBjb25zdCB1c2VyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19pbmZvLW5hbWUnKTtcclxuZXhwb3J0IGNvbnN0IHVzZXJBYm91dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19pbmZvLWRlc2NyaXB0aW9uJyk7XHJcbmV4cG9ydCBjb25zdCB1c2VyQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhcicpO1xyXG5leHBvcnQgY29uc3QgY2FyZHNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHMnKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgdXJsOiAnaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC02MCcsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogJ2E3ZDEzNzk1LWI3NTEtNDlkYi1hZWQ5LTM1MzU0ZmE3YjMyZicsXHJcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvbkNvbmZpZyA9IHtcclxuICBmb3JtU2VsZWN0b3I6ICcucG9wdXBfX2Zvcm0nLFxyXG4gIGlucHV0U2VsZWN0b3I6ICcucG9wdXBfX2lucHV0JyxcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5wb3B1cF9fYnV0dG9uJyxcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX2J1dHRvbl9kaXNhYmxlZCcsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiAncG9wdXBfX2lucHV0X3R5cGVfZXJyb3InLFxyXG4gIGVycm9yQ2xhc3M6ICdwb3B1cF9faW5wdXQtZXJyb3JfdmlzaWJsZSdcclxufTsiLCJcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoZGF0YSwgdGVtcGxhdGVTZWxlY3RvciwgaGFuZGxlT3BlblBvcHVwLCBoYW5kbGVEZWxldGVDbGljaywgbGlrZUNhcmQsIHVzZXJJZCkge1xyXG4gICAgdGhpcy5fZGF0YSA9IGRhdGE7XHJcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcclxuICAgIHRoaXMuX2NhcmRJZCA9IGRhdGEuX2lkO1xyXG4gICAgdGhpcy5fb3duZXJJZCA9IGRhdGEub3duZXIuX2lkO1xyXG4gICAgdGhpcy5fdXNlcklkID0gdXNlcklkO1xyXG4gICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xyXG4gICAgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9oYW5kbGVPcGVuUG9wdXAgPSBoYW5kbGVPcGVuUG9wdXA7XHJcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayA9IGhhbmRsZURlbGV0ZUNsaWNrO1xyXG4gICAgdGhpcy5fbGlrZUNhcmQgPSBsaWtlQ2FyZDtcclxuICAgIHRoaXMuX2xpa2UgPSBmYWxzZTtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2l0ZW0taW1nJyk7XHJcbiAgICB0aGlzLl9jYXJkVGl0bGUgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50c19faXRlbS1uYW1lJyk7XHJcbiAgICB0aGlzLl9jYXJkTGlrZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzX19pdGVtLWxpa2UnKTtcclxuICAgIHRoaXMuX2NhcmRSZW1vdmUgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50c19faXRlbS10cmFzaCcpO1xyXG4gICAgdGhpcy5fbGlrZXNOdW1iZXIgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50c19faXRlbS1udW1iZXJzJyk7XHJcbiAgfVxyXG5cclxuICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IpXHJcbiAgICAgIC5jb250ZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2l0ZW0nKVxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG5cclxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcclxuICB9XHJcblxyXG4gIGdlbmVyYXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4gICAgdGhpcy5fY2FyZEltYWdlLnNyYyA9IHRoaXMuX2xpbms7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTtcclxuICAgIHRoaXMuX2NhcmRUaXRsZS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aGlzLl9saWtlc051bWJlci50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aDtcclxuICAgIFxyXG4gICAgaWYgKHRoaXMuX3VzZXJJZCAhPT0gdGhpcy5fb3duZXJJZCkge1xyXG4gICAgICB0aGlzLl9jYXJkUmVtb3ZlLnJlbW92ZSgpXHJcbiAgICB9XHJcbiAgICBcclxuICAgIGlmICh0aGlzLl9jYXJkSWQubGlrZSkge1xyXG4gICAgICB0aGlzLl9jYXJkTGlrZS5jbGFzc0xpc3QuYWRkKCdlbGVtZW50c19faXRlbS1saWtlX29uJylcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLl9jYXJkTGlrZS5jbGFzc0xpc3QucmVtb3ZlKCdlbGVtZW50c19faXRlbS1saWtlX29uJylcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICB9XHJcbiAgXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVPcGVuUG9wdXAodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9jYXJkTGlrZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgdGhpcy5fbGlrZUNhcmQodGhpcyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9jYXJkUmVtb3ZlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayh0aGlzKTtcclxuICAgIH0pO1xyXG5cclxuICB9XHJcblxyXG4gIGdldCBsaWtlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2xpa2U7XHJcbiAgfVxyXG5cclxuICB0b2dnbGVMaWtlKCkge1xyXG4gICAgdGhpcy5fbGlrZSA9ICF0aGlzLl9saWtlO1xyXG4gIH1cclxuXHJcblxyXG4gIGNvdW50TGlrZXMobmV3TGlrZSkge1xyXG4gICAgdGhpcy5fbGlrZXMgPSBuZXdMaWtlO1xyXG4gICAgdGhpcy5fbGlrZXNOdW1iZXIudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XHJcbiAgfVxyXG5cclxuICBoYW5kbGVMaWtlKCkge1xyXG4gICAgdGhpcy5fY2FyZExpa2UuY2xhc3NMaXN0LnRvZ2dsZSgnZWxlbWVudHNfX2l0ZW0tbGlrZV9vbicpO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlVHJhc2goKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XHJcbiAgfVxyXG59IiwiXHJcbmV4cG9ydCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXApIHtcclxuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cCk7XHJcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC1jbG9zZScpO1xyXG4gIH1cclxuXHJcbiAgb3BlblBvcHVwKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbicpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICB9XHJcblxyXG4gIGNsb3NlUG9wdXAoKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKCdwb3B1cF9vcGVuJyk7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGV2dCkgPT4ge1xyXG4gICAgaWYgKGV2dC5rZXkgPT09ICdFc2NhcGUnKSB7XHJcbiAgICAgIHRoaXMuY2xvc2VQb3B1cCgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgdGhpcy5jbG9zZVBvcHVwKClcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIChldnQpID0+IHtcclxuICAgICAgaWYgKGV2dC5jdXJyZW50VGFyZ2V0ID09PSBldnQudGFyZ2V0KSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZVBvcHVwKCk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgfVxyXG59IiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tICcuL1BvcHVwLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXAsIHtmb3JtU3VibWl0fSkge1xyXG4gICAgc3VwZXIocG9wdXApO1xyXG4gICAgdGhpcy5fZm9ybVN1Ym1pdCA9IGZvcm1TdWJtaXQ7XHJcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5wb3B1cF9faW5wdXQnKTtcclxuICB9XHJcbiAgXHJcbiAgc2V0TG9hZGluZ1RleHQodGV4dCkge1xyXG4gICAgdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19idXR0b24nKS50ZXh0Q29udGVudCA9IHRleHQ7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICB0aGlzLl9mb3JtVmFsdWVzID0ge307XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgIHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pXHJcbiAgICByZXR1cm4gdGhpcy5fZm9ybVZhbHVlcztcclxuICB9XHJcblxyXG4gIHNldElucHV0VmFsdWVzKGRhdGEpIHtcclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBpbnB1dC52YWx1ZSA9IGRhdGFbaW5wdXQubmFtZV07XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICAgIHRoaXMuX2Zvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICB9KTtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG5cclxuICBjbG9zZVBvcHVwKCkge1xyXG4gICAgc3VwZXIuY2xvc2VQb3B1cCgpXHJcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG4gfSIsIlxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdGlvbiB7XHJcbiAgY29uc3RydWN0b3IgKGNvbmZpZywgZm9ybUVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fY29uZmlnLmlucHV0U2VsZWN0b3IpKTtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuZXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgaWYgKGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSB7XHJcbiAgICByZXR1cm4gaW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCk7XHJcbiAgfVxyXG5cclxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KHRoaXMuX2lucHV0TGlzdCkpIHtcclxuICAgICAgdGhpcy5kaXNhYmxlQnV0dG9uKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xyXG4gICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbiAgfVxyXG5cclxuICBkZWxldGVFcnJvcnMoKSB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgZGlzYWJsZUJ1dHRvbigpIHtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcblxyXG4vL3RoaXMuX2RlbGV0ZUVycm9ycygpOyIsIlxyXG5pbXBvcnQgJy4vaW5kZXguY3NzJztcclxuaW1wb3J0IHsgYnV0dG9uRWRpdE9wZW4sIGJ1dHRvbkFkZE9wZW4sIGlucHV0TmFtZSwgaW5wdXRBYm91dCwgaW5wdXRBdmF0YXIsIHVzZXJOYW1lLCB1c2VyQWJvdXQsIHVzZXJBdmF0YXIsIGNhcmRzQ29udGFpbmVyLCBjb25maWcsIHZhbGlkYXRpb25Db25maWcgfSBmcm9tICcuLi91dGlscy9kYXRhLmpzJztcclxuaW1wb3J0IENhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzJztcclxuaW1wb3J0IFNlY3Rpb24gIGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XHJcbmltcG9ydCBGb3JtVmFsaWRhdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0aW9uLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnO1xyXG5pbXBvcnQgVXNlckluZm8gIGZyb20gJy4uL2NvbXBvbmVudHMvVXNlckluZm8uanMnO1xyXG5pbXBvcnQgQXBpIGZyb20gJy4uL2NvbXBvbmVudHMvQXBpLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aENvbmZpcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtLmpzJztcclxuXHJcbmxldCB1c2VySWQ7XHJcblxyXG5jb25zdCBhcGkgPSBuZXcgQXBpKGNvbmZpZyk7XHJcblxyXG4gIGFwaS5nZXRPd25lckluZm8oKVxyXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgdXNlckVkaXQuc2V0VXNlckluZm8oZGF0YSk7XHJcbiAgICAgIHVzZXJFZGl0LnNldFVzZXJBdmF0YXIoZGF0YSk7XHJcbiAgICAgIHVzZXJFZGl0LmdldE93bmVySWQoZGF0YS5faWQpXHJcblxyXG4gICAgICB1c2VySWQgPSBkYXRhLl9pZDtcclxuICAgIH0pXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgIGFwaS5nZXRDYXJkcygpXHJcbiAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICAgIGNhcmRMaXN0LnJlbmRlckl0ZW0oZGF0YSlcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICB9KVxyXG5cclxuY29uc3QgdXNlckVkaXQgPSBuZXcgVXNlckluZm8oe25hbWU6IHVzZXJOYW1lLCBhYm91dDogdXNlckFib3V0LCBhdmF0YXI6IHVzZXJBdmF0YXJ9KTtcclxuXHJcbmNvbnN0IGNhcmRMaXN0ID0gbmV3IFNlY3Rpb24oe1xyXG4gIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xyXG4gICAgY29uc3QgbmV3Q2FyZCA9IGNyZWF0ZUNhcmQoaXRlbSk7XHJcbiAgICBjYXJkTGlzdC5hZGRJdGVtKG5ld0NhcmQpO1xyXG4gIH1cclxufSwgY2FyZHNDb250YWluZXIpO1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChpdGVtKSB7XHJcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGl0ZW0sICcuaXRlbScsIGhhbmRsZU9wZW5Qb3B1cCwgaGFuZGxlRGVsZXRlQ2xpY2ssIGxpa2VDYXJkLCB1c2VySWQpO1xyXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxuICByZXR1cm4gY2FyZEVsZW1lbnQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZENhcmQoaXRlbSkge1xyXG4gIGNvbnN0IG5ld0NhcmQgPSBjcmVhdGVDYXJkKGl0ZW0pO1xyXG4gIGNhcmRMaXN0LmFkZEl0ZW0obmV3Q2FyZCk7XHJcbn1cclxuXHJcbmNvbnN0IHBvcHVwQWRkID0gbmV3IFBvcHVwV2l0aEZvcm0oJy5wb3B1cF9hZGQnLCB7XHJcbiAgZm9ybVN1Ym1pdDogKGRhdGEpID0+IHtcclxuICAgIHBvcHVwQWRkLnNldExvYWRpbmdUZXh0KCfQodC+0YXRgNCw0L3QtdC90LjQtS4uLicpO1xyXG4gICAgYXBpLmNyZWF0ZUNhcmQoZGF0YSlcclxuICAgICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICBhZGRDYXJkKGRhdGEpO1xyXG4gICAgICAgIHBvcHVwQWRkLmNsb3NlUG9wdXAoKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICAgIH0pXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICBwb3B1cEFkZC5zZXRMb2FkaW5nVGV4dCgn0KHQvtC30LTQsNGC0YwnKTtcclxuICAgICAgfSlcclxuICB9XHJcbn0pO1xyXG5cclxucG9wdXBBZGQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmJ1dHRvbkFkZE9wZW4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgZm9ybVZhbGlkYXRvcnNbJ2Zvcm0tYWRkJ10uZGVsZXRlRXJyb3JzKCk7XHJcbiAgZm9ybVZhbGlkYXRvcnNbJ2Zvcm0tYWRkJ10uZGlzYWJsZUJ1dHRvbigpO1xyXG4gIHBvcHVwQWRkLm9wZW5Qb3B1cCgpO1xyXG59KTtcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZU9wZW5Qb3B1cCAobmFtZSwgbGluaykge1xyXG4gIHBvcHVwSW1hZ2Uub3BlblBvcHVwKG5hbWUsIGxpbmspXHJcbn0gXHJcblxyXG5mdW5jdGlvbiBsaWtlQ2FyZCAoY2FyZCkge1xyXG4gIGlmIChjYXJkLmxpa2UpIHtcclxuICAgIGFwaS5kZWxldGVMaWtlKGNhcmQuX2NhcmRJZClcclxuICAgICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICBjYXJkLmNvdW50TGlrZXMoZGF0YS5saWtlcyk7XHJcbiAgICAgICAgY2FyZC50b2dnbGVMaWtlKCk7XHJcbiAgICAgICAgY2FyZC5oYW5kbGVMaWtlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKVxyXG4gICAgICB9KVxyXG4gIH0gZWxzZSB7XHJcbiAgICBhcGkuYWRkTGlrZShjYXJkLl9jYXJkSWQpXHJcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgICAgY2FyZC5jb3VudExpa2VzKGRhdGEubGlrZXMpO1xyXG4gICAgICAgIGNhcmQudG9nZ2xlTGlrZSgpO1xyXG4gICAgICAgIGNhcmQuaGFuZGxlTGlrZSgpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcclxuICAgICAgfSlcclxuICB9XHJcbn1cclxuXHJcblxyXG5jb25zdCBwb3B1cENvbmZpcm0gPSBuZXcgUG9wdXBXaXRoQ29uZmlybSgnLnBvcHVwX2FzaycsIHtcclxuICBmb3JtU3VibWl0OiAoY2FyZCkgPT4ge1xyXG4gICAgcG9wdXBDb25maXJtLnNldExvYWRpbmdUZXh0KCfQo9C00LDQu9C10L3QuNC1Li4uJyk7XHJcbiAgICBhcGkuZGVsZXRlQ2FyZChjYXJkLl9jYXJkSWQpXHJcbiAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICBjYXJkLmhhbmRsZVRyYXNoKCk7XHJcbiAgICAgICAgcG9wdXBDb25maXJtLmNsb3NlUG9wdXAoKVxyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcclxuICAgICAgfSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIHBvcHVwQ29uZmlybS5zZXRMb2FkaW5nVGV4dCgn0JTQsCcpO1xyXG4gICAgICB9KVxyXG4gIH1cclxufSlcclxuICBcclxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2xpY2soY2FyZCkge1xyXG4gIHBvcHVwQ29uZmlybS5oYW5kbGVDYXJkKGNhcmQpO1xyXG4gIHBvcHVwQ29uZmlybS5vcGVuUG9wdXAoKTtcclxufVxyXG5cclxucG9wdXBDb25maXJtLnNldEV2ZW50TGlzdGVuZXJzKCk7ICAgIFxyXG5cclxuXHJcblxyXG5jb25zdCBwb3B1cEVkaXQgPSBuZXcgUG9wdXBXaXRoRm9ybSgnLnBvcHVwX2VkaXQnLCB7XHJcbiAgICAgICAgZm9ybVN1Ym1pdDogKGRhdGEpID0+IHtcclxuICAgICAgICAgIHBvcHVwRWRpdC5zZXRMb2FkaW5nVGV4dCgn0KHQvtGF0YDQsNC90LXQvdC40LUuLi4nKTtcclxuICAgICAgICAgIGFwaS5lZGl0UHJvZmlsZShkYXRhKVxyXG4gICAgICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICAgIHVzZXJFZGl0LnNldFVzZXJJbmZvKGRhdGEsIHtuYW1lOiBpbnB1dE5hbWUsIGFib3V0OiBpbnB1dEFib3V0fSk7XHJcbiAgICAgICAgICAgICAgcG9wdXBFZGl0LmNsb3NlUG9wdXAoKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycilcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgICAgICAgIHBvcHVwRWRpdC5zZXRMb2FkaW5nVGV4dCgn0KHQvtGF0YDQsNC90LjRgtGMJyk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gIH0pO1xyXG5cclxuYnV0dG9uRWRpdE9wZW4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgcG9wdXBFZGl0LnNldElucHV0VmFsdWVzKHVzZXJFZGl0LmdldFVzZXJJbmZvKCkpO1xyXG4gIGZvcm1WYWxpZGF0b3JzWydmb3JtLWVkaXQnXS5kZWxldGVFcnJvcnMoKTtcclxuICBmb3JtVmFsaWRhdG9yc1snZm9ybS1lZGl0J10uZGlzYWJsZUJ1dHRvbigpO1xyXG4gIHBvcHVwRWRpdC5vcGVuUG9wdXAoKTtcclxufSk7XHJcblxyXG5wb3B1cEVkaXQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIFxyXG5cclxuY29uc3QgcG9wdXBJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZSgnLnBvcHVwX2ltZycpO1xyXG5cclxucG9wdXBJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuXHJcbmNvbnN0IHBvcHVwQXZhdGFyID0gbmV3IFBvcHVwV2l0aEZvcm0oJy5wb3B1cF9hdmF0YXInLCB7XHJcbiAgZm9ybVN1Ym1pdDogKGRhdGEpID0+IHtcclxuICAgIHBvcHVwQXZhdGFyLnNldExvYWRpbmdUZXh0KCfQodC+0YXRgNCw0L3QtdC90LjQtS4uLicpO1xyXG4gICAgYXBpLmVkaXRBdmF0YXIoZGF0YSlcclxuICAgICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICB1c2VyRWRpdC5zZXRVc2VyQXZhdGFyKGRhdGEsIHthdmF0YXI6IGlucHV0QXZhdGFyfSk7XHJcbiAgICAgICAgcG9wdXBBdmF0YXIuY2xvc2VQb3B1cCgpXHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKVxyXG4gICAgICB9KVxyXG4gICAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgcG9wdXBBdmF0YXIuc2V0TG9hZGluZ1RleHQoJ9Ch0L7RhdGA0LDQvdC40YLRjCcpO1xyXG4gICAgICB9KVxyXG4gIH1cclxufSlcclxuXHJcbnBvcHVwQXZhdGFyLnNldEV2ZW50TGlzdGVuZXJzKClcclxuXHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgcG9wdXBBdmF0YXIub3BlblBvcHVwKCk7XHJcbn0pXHJcblxyXG5cclxuY29uc3QgZm9ybVZhbGlkYXRvcnMgPSB7fTtcclxuXHJcbmNvbnN0IGVuYWJsZVZhbGlkYXRpb24gPSAodmFsaWRhdGlvbkNvbmZpZykgPT4ge1xyXG4gIGNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHZhbGlkYXRpb25Db25maWcuZm9ybVNlbGVjdG9yKSk7XHJcbiAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcclxuICAgIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdGlvbih2YWxpZGF0aW9uQ29uZmlnLCBmb3JtRWxlbWVudCk7XHJcbiAgICBjb25zdCBmb3JtTmFtZSA9IGZvcm1FbGVtZW50LmdldEF0dHJpYnV0ZSgnbmFtZScpO1xyXG4gICAgZm9ybVZhbGlkYXRvcnNbZm9ybU5hbWVdID0gdmFsaWRhdG9yO1xyXG4gICAgdmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuICB9KVxyXG59XHJcblxyXG5lbmFibGVWYWxpZGF0aW9uKHZhbGlkYXRpb25Db25maWcpO1xyXG4iLCJcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcclxuICAgIHRoaXMudXJsID0gY29uZmlnLnVybDtcclxuICAgIHRoaXMuaGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZVJlc3BvbnNlKHJlcykge1xyXG4gICAgaWYgKHJlcy5vaykge1xyXG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgIH1cclxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ9Cf0YDQvtC40LfQvtGI0LvQsCDQvtGI0LjQsdC60LAnKSlcclxuICB9XHJcblxyXG4gIGdldENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiAnR0VUJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzXHJcbiAgICB9KVxyXG4gICAgLnRoZW4ocmVzID0+IHRoaXMuX2hhbmRsZVJlc3BvbnNlKHJlcykpXHJcbiAgfVxyXG5cclxuICBjcmVhdGVDYXJkKGRhdGEpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLnVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXHJcbiAgICAgICAgbGluazogZGF0YS5saW5rXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgLnRoZW4ocmVzID0+IHRoaXMuX2hhbmRsZVJlc3BvbnNlKHJlcykpXHJcbiAgfVxyXG5cclxuICBnZXRPd25lckluZm8oKSB7XHJcbiAgICByZXR1cm4gZmV0Y2godGhpcy51cmwgKyBgL3VzZXJzL21lYCwge1xyXG4gICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnNcclxuICAgIH0pXHJcbiAgICAudGhlbihyZXMgPT4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzKSlcclxuICB9XHJcblxyXG4gIGVkaXRQcm9maWxlKGRhdGEpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLnVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxyXG4gICAgICAgIGFib3V0OiBkYXRhLmFib3V0XHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgLnRoZW4ocmVzID0+IHRoaXMuX2hhbmRsZVJlc3BvbnNlKHJlcykpXHJcbiAgfVxyXG4gIFxyXG4gIGVkaXRBdmF0YXIoZGF0YSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICBhdmF0YXI6IGRhdGEuYXZhdGFyLCBcclxuICAgICAgfSlcclxuICB9KVxyXG4gICAgLnRoZW4ocmVzID0+IHRoaXMuX2hhbmRsZVJlc3BvbnNlKHJlcykpXHJcbiAgfVxyXG5cclxuICBkZWxldGVDYXJkKF9pZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS9jYXJkcy8ke19pZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVyc1xyXG4gICAgfSlcclxuICAgIC50aGVuKHJlcyA9PiB0aGlzLl9oYW5kbGVSZXNwb25zZShyZXMpKVxyXG4gIH1cclxuXHJcbiAgYWRkTGlrZShfaWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLnVybH0vY2FyZHMvJHtfaWR9L2xpa2VzYCwge1xyXG4gICAgICBtZXRob2Q6ICdQVVQnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnNcclxuICAgIH0pXHJcbiAgICAudGhlbihyZXMgPT4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzKSlcclxuICB9XHJcblxyXG4gIGRlbGV0ZUxpa2UoX2lkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy51cmx9L2NhcmRzLyR7X2lkfS9saWtlc2AsIHtcclxuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzXHJcbiAgICB9KVxyXG4gICAgLnRoZW4ocmVzID0+IHRoaXMuX2hhbmRsZVJlc3BvbnNlKHJlcykpXHJcbiAgfVxyXG59IiwiXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7bmFtZSwgYWJvdXQsIGF2YXRhciwgX2lkfSkge1xyXG4gICAgdGhpcy5fbmFtZSA9IG5hbWU7XHJcbiAgICB0aGlzLl9hYm91dCA9IGFib3V0O1xyXG4gICAgdGhpcy5fYXZhdGFyID0gYXZhdGFyO1xyXG4gICAgdGhpcy5faWQgPSBfaWQ7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgcmV0dXJuIHtcclxuICAgIG5hbWU6IHRoaXMuX25hbWUudGV4dENvbnRlbnQsXHJcbiAgICBhYm91dDogdGhpcy5fYWJvdXQudGV4dENvbnRlbnRcclxuICB9XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbyhkYXRhKSB7XHJcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fYWJvdXQudGV4dENvbnRlbnQgPSBkYXRhLmFib3V0O1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckF2YXRhcihkYXRhKSB7XHJcbiAgICB0aGlzLl9hdmF0YXIuc3JjID0gZGF0YS5hdmF0YXI7XHJcbiAgfVxyXG5cclxuICBnZXRPd25lcklkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lkO1xyXG4gIH1cclxufSIsIlxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gY29udGFpbmVyU2VsZWN0b3I7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbShpdGVtcykge1xyXG4gICAgaXRlbXMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIoZWxlbWVudCk7XHJcbiAgICB9KVxyXG4gIH1cclxufSIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aENvbmZpcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXAsIHtmb3JtU3VibWl0fSkge1xyXG4gICAgc3VwZXIocG9wdXApO1xyXG4gICAgdGhpcy5fZm9ybVN1Ym1pdCA9IGZvcm1TdWJtaXQ7XHJcbiAgICB0aGlzLl9idXR0b25Db25maXJtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19idXR0b24nKTtcclxuICB9XHJcblxyXG4gIHNldExvYWRpbmdUZXh0KHRleHQpIHtcclxuICAgIHRoaXMuX2J1dHRvbkNvbmZpcm0udGV4dENvbnRlbnQgPSB0ZXh0O1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fYnV0dG9uQ29uZmlybS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgdGhpcy5fZm9ybVN1Ym1pdCh0aGlzLl9jYXJkKTtcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBoYW5kbGVDYXJkKGNhcmQpIHtcclxuICAgIHRoaXMuX2NhcmQgPSBjYXJkO1xyXG4gIH1cclxufSIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSAnLi9Qb3B1cC5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cCkge1xyXG4gICAgc3VwZXIocG9wdXApO1xyXG4gICAgdGhpcy5faW1nRnVsbCA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5pbWdfX2Z1bGwnKTtcclxuICAgIHRoaXMuX2ltZ1RpdGxlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLmltZ19fdGl0bGUnKTtcclxuICB9XHJcblxyXG4gIG9wZW5Qb3B1cChuYW1lLCBsaW5rKSB7XHJcbiAgICB0aGlzLl9pbWdGdWxsLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl9pbWdGdWxsLmFsdCA9IG5hbWU7XHJcbiAgICB0aGlzLl9pbWdUaXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICBzdXBlci5vcGVuUG9wdXAoKTtcclxuICB9XHJcbn0iXSwibmFtZXMiOlsiYnV0dG9uRWRpdE9wZW4iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJidXR0b25BZGRPcGVuIiwiaW5wdXROYW1lIiwiaW5wdXRBYm91dCIsImlucHV0QXZhdGFyIiwidXNlck5hbWUiLCJ1c2VyQWJvdXQiLCJ1c2VyQXZhdGFyIiwiY2FyZHNDb250YWluZXIiLCJDYXJkIiwiY29uc3RydWN0b3IiLCJkYXRhIiwidGVtcGxhdGVTZWxlY3RvciIsImhhbmRsZU9wZW5Qb3B1cCIsImhhbmRsZURlbGV0ZUNsaWNrIiwibGlrZUNhcmQiLCJ1c2VySWQiLCJ0aGlzIiwiX2RhdGEiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfY2FyZElkIiwiX2lkIiwiX293bmVySWQiLCJvd25lciIsIl91c2VySWQiLCJfbGlrZXMiLCJsaWtlcyIsIl90ZW1wbGF0ZVNlbGVjdG9yIiwiX2hhbmRsZU9wZW5Qb3B1cCIsIl9oYW5kbGVEZWxldGVDbGljayIsIl9saWtlQ2FyZCIsIl9saWtlIiwiX2VsZW1lbnQiLCJfZ2V0VGVtcGxhdGUiLCJfY2FyZEltYWdlIiwiX2NhcmRUaXRsZSIsIl9jYXJkTGlrZSIsIl9jYXJkUmVtb3ZlIiwiX2xpa2VzTnVtYmVyIiwiY29udGVudCIsImNsb25lTm9kZSIsImdlbmVyYXRlQ2FyZCIsIl9zZXRFdmVudExpc3RlbmVycyIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwibGVuZ3RoIiwicmVtb3ZlIiwibGlrZSIsImNsYXNzTGlzdCIsImFkZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0b2dnbGVMaWtlIiwiY291bnRMaWtlcyIsIm5ld0xpa2UiLCJoYW5kbGVMaWtlIiwidG9nZ2xlIiwiaGFuZGxlVHJhc2giLCJQb3B1cCIsInBvcHVwIiwiX3BvcHVwIiwiX2Nsb3NlQnV0dG9uIiwib3BlblBvcHVwIiwiX2hhbmRsZUVzY0Nsb3NlIiwiY2xvc2VQb3B1cCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJrZXkiLCJzZXRFdmVudExpc3RlbmVycyIsImN1cnJlbnRUYXJnZXQiLCJ0YXJnZXQiLCJQb3B1cFdpdGhGb3JtIiwiZm9ybVN1Ym1pdCIsInN1cGVyIiwiX2Zvcm1TdWJtaXQiLCJfZm9ybSIsIl9pbnB1dExpc3QiLCJxdWVyeVNlbGVjdG9yQWxsIiwic2V0TG9hZGluZ1RleHQiLCJ0ZXh0IiwiX2dldElucHV0VmFsdWVzIiwiX2Zvcm1WYWx1ZXMiLCJmb3JFYWNoIiwiaW5wdXQiLCJ2YWx1ZSIsInNldElucHV0VmFsdWVzIiwicHJldmVudERlZmF1bHQiLCJyZXNldCIsIkZvcm1WYWxpZGF0aW9uIiwiY29uZmlnIiwiZm9ybUVsZW1lbnQiLCJfY29uZmlnIiwiX2Zvcm1FbGVtZW50IiwiQXJyYXkiLCJmcm9tIiwiaW5wdXRTZWxlY3RvciIsIl9idXR0b25FbGVtZW50Iiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaGlkZUlucHV0RXJyb3IiLCJpbnB1dEVsZW1lbnQiLCJlcnJvckVsZW1lbnQiLCJpZCIsImVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hhc0ludmFsaWRJbnB1dCIsImlucHV0TGlzdCIsInNvbWUiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJkaXNhYmxlQnV0dG9uIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImRpc2FibGVkIiwiZGVsZXRlRXJyb3JzIiwiZW5hYmxlVmFsaWRhdGlvbiIsImFwaSIsInVybCIsImhlYWRlcnMiLCJfaGFuZGxlUmVzcG9uc2UiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0IiwiRXJyb3IiLCJnZXRDYXJkcyIsImZldGNoIiwibWV0aG9kIiwidGhlbiIsImNyZWF0ZUNhcmQiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImdldE93bmVySW5mbyIsImVkaXRQcm9maWxlIiwiYWJvdXQiLCJlZGl0QXZhdGFyIiwiYXZhdGFyIiwiZGVsZXRlQ2FyZCIsImFkZExpa2UiLCJkZWxldGVMaWtlIiwiYXV0aG9yaXphdGlvbiIsInVzZXJFZGl0Iiwic2V0VXNlckluZm8iLCJzZXRVc2VyQXZhdGFyIiwiZ2V0T3duZXJJZCIsImNhcmRMaXN0IiwicmVuZGVySXRlbSIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsIl9hYm91dCIsIl9hdmF0YXIiLCJnZXRVc2VySW5mbyIsInJlbmRlcmVyIiwiY29udGFpbmVyU2VsZWN0b3IiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiYWRkSXRlbSIsImVsZW1lbnQiLCJwcmVwZW5kIiwiaXRlbXMiLCJpdGVtIiwibmV3Q2FyZCIsInBvcHVwQWRkIiwiYWRkQ2FyZCIsImZpbmFsbHkiLCJwb3B1cEltYWdlIiwiY2FyZCIsImZvcm1WYWxpZGF0b3JzIiwicG9wdXBDb25maXJtIiwiX2J1dHRvbkNvbmZpcm0iLCJfY2FyZCIsImhhbmRsZUNhcmQiLCJwb3B1cEVkaXQiLCJfaW1nRnVsbCIsIl9pbWdUaXRsZSIsInBvcHVwQXZhdGFyIiwidmFsaWRhdGlvbkNvbmZpZyIsImZvcm1TZWxlY3RvciIsInZhbGlkYXRvciIsImZvcm1OYW1lIiwiZ2V0QXR0cmlidXRlIl0sInNvdXJjZVJvb3QiOiIifQ==