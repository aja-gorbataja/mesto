(()=>{"use strict";const e={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"};class t{constructor(e,t,s){this._name=e.name,this._link=e.link,this._templateSelector=t,this._handleOpenPopup=s}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".elements__item").cloneNode(!0)}generateCard(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".elements__item-img").src=this._link,this._element.querySelector(".elements__item-img").alt=this._name,this._element.querySelector(".elements__item-name").textContent=this._name,this._element}_handleLike(){this._element.querySelector(".elements__item-like").classList.toggle("elements__item-like_on")}_handleTrash(){this._element.remove()}_setEventListeners(){this._element.querySelector(".elements__item-img").addEventListener("click",(()=>{this._handleOpenPopup(this._name,this._link)})),this._element.querySelector(".elements__item-like").addEventListener("click",(()=>{this._handleLike()})),this._element.querySelector(".elements__item-trash").addEventListener("click",(()=>{this._handleTrash()}))}}class s{constructor(e){this._popupSelector=document.querySelector(e),this._closeButton=this._popupSelector.querySelector(".popup-close")}openPopup(){this._popupSelector.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose),this.setEventListeners()}closePopup(){this._popupSelector.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.closePopup()};setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.closePopup()})),this._popupSelector.addEventListener("click",(e=>{e.currentTarget===e.target&&this.closePopup()}))}}class n extends s{constructor(e,{formSubmit:t}){super(e),this._formSubmit=t,this._form=this._popupSelector.querySelector(".popup__form"),this._inputList=this._form.querySelectorAll(".popup__input")}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._formSubmit(this._getInputValues()),this.closePopup()})),super.setEventListeners()}closePopup(){super.closePopup(),this._form.reset()}}class i{constructor(e,t){this._config=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector)}_hideInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);t.classList.remove(this._config.errorClass),t.textContent="",e.classList.remove(this._config.inputErrorClass)}_showInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);t.classList.add(this._config.errorClass),t.textContent=e.validationMessage,e.classList.add(this._config.inputErrorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.remove(this._config.submitButtonSelector),this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_deleteError(){this._inputList.forEach((e=>{this._hideInputError(e)}))}disabledButton(){this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0,this._deleteError()}enableValidation(){this._setEventListeners()}}const o=document.querySelector(".form__input-name"),r=document.querySelector(".form__input-description"),l=document.querySelector(".profile__info-edit"),u=document.querySelector(".form_edit"),c=document.querySelector(".profile__add"),p=document.querySelector(".form_add"),a=new i(e,u),_=new i(e,p),d=new class{constructor({data:e,renderer:t},s){this._renderedItems=e,this._renderer=t,this._container=document.querySelector(s)}addItem(e){this._container.prepend(e)}renderItem(){this._renderedItems.forEach((e=>{this._renderer(e)}))}}({data:[{name:"Архыз",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{name:"Челябинская область",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{name:"Иваново",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{name:"Холмогорский район",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:e=>{const s=new t(e,".item",E).generateCard();d.addItem(s)}},".elements"),m=new class{constructor({name:e,info:t}){this._name=document.querySelector(e),this._info=document.querySelector(t)}getUserInfo(){return{name:this._name.textContent,info:this._info.textContent}}setUserInfo(e){this._name.textContent=e.name,this._info.textContent=e.info}}({name:".profile__info-name",info:".profile__info-description"}),h=new class extends s{constructor(e){super(e),this._imgFull=document.querySelector(".img__full"),this._imgTitle=document.querySelector(".img__title")}openPopup(e,t){super.openPopup(),this._imgFull.src=t,this._imgFull.alt=e,this._imgTitle.textContent=e}}(".popup_img"),f=new n(".popup_edit",{formSubmit:e=>{m.setUserInfo(e)}}),v=new n(".popup_add",{formSubmit:e=>{!function(e){const s=new t(e,".item",E).generateCard();d.addItem(s)}(e)}});function E(e,t){h.openPopup(e,t)}l.addEventListener("click",(()=>{const{name:e,info:t}=m.getUserInfo();o.value=e,r.value=t,f.openPopup(),a.disabledButton()})),c.addEventListener("click",(()=>{_.disabledButton(),v.openPopup()})),a.enableValidation(),_.enableValidation(),d.renderItem()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,